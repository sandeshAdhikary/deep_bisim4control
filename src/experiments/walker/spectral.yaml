sweeper:
  method: grid
  sweeper_type: wandb
  goal: maximize
  name: spectral
  project: &project walker
  load_runs_from_queue: true
  parameters:
    model:
      encoder_ortho_loss_reg: {values: [1.0, 0.01, 0.001]}
trainer:
  seed: &seed 1 
  batch_size: 128
  eval_freq: &eval_freq 10_000 # every n epochs
  init_steps: 1_000
  num_eval_episodes: 1
  num_train_steps: &num_train_steps 1_000_000
  port: 2000
  save_buffer: false
  save_model: false
  save_tb: false
  save_video: false
  save_model_mode: None
  device: &device cuda
  terminal_display: rich
  save_checkpoint_freq: 10_000 # every epoch
  async_eval: true
  log_length_train: 10
  log_length_eval: 10
  load_from_checkpoint: true
  env:
    seed: *seed
    domain_name: walker
    task_name: walk
    distraction_level: 0.2
    distractor: None
    distractor_img_shrink_factor: 1.3
    distractor_type: None
    episode_length: 1_000
    image_size: 88
    img_source: null
    frame_stack: 3
    num_envs: 1
    render: false
    total_frames: 1000
    resource_files: null
    encoder_type: &encoder_type pixel
    action_repeat: 1
  eval_env:
    num_envs: 5
    episode_length: 500
  replay_buffer:
    # Defaults from DBC paper
    replay_buffer_capacity: 100_000 # paper used 1M, but we don't have memory
model: &model_params
  device: *device
  # Defaults from DBC paper
  discount: 0.99
  critic_lr: 0.0001
  critic_target_update_freq: 2
  critic_tau: 0.005
  actor_lr: 0.0001
  actor_update_freq: 2
  actor_log_std_max: 2
  actor_log_std_min: -5
  encoder_lr: 0.0001
  decoder_lr: 0.0001
  init_temperature: 0.1
  encoder_feature_dim: 50
  transition_model_type: 'probabilistic'
  # Other defaults
  agent: bisim
  actor_beta: 0.9
  alpha_beta: 0.9
  alpha_lr: 0.001
  bisim_coef: 0.5
  critic_beta: 0.9
  decoder_type: pixel
  decoder_update_freq: 1
  decoder_weight_lambda: 0.000001
  encoder_kernel_bandwidth: auto
  encoder_mode: spectral
  encoder_normalize_loss: true
  encoder_ortho_loss_reg: 0.0001
  encoder_output_dim: null
  encoder_stride: 1
  encoder_tau: 0.005
  encoder_type: *encoder_type
  hidden_dim: 256
  k: 3
  load_encoder: null
  num_filters: 32
  num_layers: 4
  reward_decoder_num_rews: 1
  reward_decomp_method: eigenrewards
logger:
  sw: wandb
  dir: $LOG_DIR
  img_downscale_factor: 3
  minimal: false
  project: *project
  video_log_freq: null
  tracked_params: *model_params
  num_train_steps: *num_train_steps
  eval_freq: *eval_freq
  cleanup: true # delete logdir after training