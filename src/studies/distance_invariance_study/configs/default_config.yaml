study:
  name: Distance Invariance
  desc: |
    Evaluating the effectiveness of various representation learning algorithms in 
    enforcing distance-based-invariance.
  storage:
      type: ssh
      host: ${oc.env:SSH_HOST}
      username: ${oc.env:SSH_USERNAME}
      password: ${oc.env:SSH_PASSWORD}
      root_dir: ${oc.env:SSH_DIR}/${..name}
      overwrite: false
  database:
      type: mysql
      name: ${..name} 
      host: ${oc.env:MYSQL_HOST}
      username: ${oc.env:MYSQL_USERNAME}
      password: ${oc.env:MYSQL_PASSWORD}
  metrics: 
      loss:
        name: loss
      pred_loss:
        name: pred_loss
        module_path: src.studies.distance_invariance_study.metrics.PredictionErrorMetric
trainer:
  project: ${..project.name}
  module_path: src.studies.distance_invariance_study.modules.EigenTrainer
  num_epochs: ${..project.num_epochs}
  terminal_display: rich
  eval_freq: 100
  save_checkpoint_freq: 1_000_000
  num_samples: 400
  batch_size: 32
  domain: ${..project.domain}
  seed: 420
  gridsize: 11
  log_freq: 50
  metrics: 
      loss:
        name: loss
      model_weights:
        name: model_weights
  evaluator:
    module_path: src.studies.distance_invariance_study.modules.EigenEvaluator
    batch_size: 400
    seed: 420
    async_eval: false
    gridsize: ${trainer.gridsize}
    domain: ${...project.domain}
    metrics: 
        loss:
          name: loss
  storage:
    input:
      type: ssh
      root_dir: ${....study.storage.root_dir}
      sub_dir: train
      host: ${oc.env:SSH_HOST}
      username: ${oc.env:SSH_USERNAME}
      password: ${oc.env:SSH_PASSWORD}
    output:
      type: ssh
      root_dir: ${....study.storage.root_dir}
      sub_dir: train
      host: ${oc.env:SSH_HOST}
      username: ${oc.env:SSH_USERNAME}
      password: ${oc.env:SSH_PASSWORD}
model:
  project: ${..project.name}
  module_path: ???
  encoder_dim: 5
  domain: ${..project.domain}
  optimizer: 
    name: Adam
    optimizer_kwargs:
      lr: 0.01
  scheduler:
    name: LinearLR
    scheduler_kwargs:
      total_iters: 15000
      start_factor: 1.0
      end_factor: 0.01
  hidden_dim: 32
  nonlinearity: sin_and_cos
  model_type: ${..project.model_type}
logger:
  project: ${..project.name}
  module_path: trainer.logger.Logger
  sw: wandb
  dir: ${oc.env:LOG_DIR}
  tracked_params: ${model}
  num_epochs: ${..trainer.num_epochs}
  # num_train_steps: ${..trainer.num_train_steps}
  eval_freq: ${..trainer.eval_freq}
  cleanup: true # delete logdir after training
  log_freq: 100_000 # epochs
  img_downscale_factor: 1
sweeper:
  project: ${..project.name}
  method: grid
  sweeper_type: wandb
  name: ???
  load_runs_from_queue: true
  heartbeat_timeout: 5
  parameters: ???